# This workflow produces an HTML extra test results report

name: Newman Tests
on: [pull_request]

jobs:
  test-api:
    runs-on: ubuntu-latest
    steps:
   # Check-out the repository under $GITHUB_WORKSPACE, so the job can access it
      - uses: actions/checkout@v3
      
   # Setup Node on the runner
      - name: Setup Node
        uses: actions/setup-node@v3
        with: 
          node-version: '19.2'
    
   # Install the Newman command line utility
      - name: Install Newman
        run: npm install -g newman
        
   # Cache the Html Extra Reporter installation to improve performance.    
      - name: Cache newman-reporter-htmlextra
        id: Newman-Reporter-Htmlextra-cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-newman-reporter-htmlextra-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-newman-reporter-htmlextra-
        
   # Install the newman-reporter-htmlextra command line utility
      - name: Install newman-reporter-htmlextra
        if: steps.Newman-Reporter-Htmlextra-cache.outputs.cache-hit != 'true'
        run: npm install -g newman-reporter-htmlextra
          
   # Make directory to upload the test results
      - name: Make Directory for results
        run: mkdir -p testResults
        
   # Run the POSTMAN collection
      - name: Run API Tests
        run: newman run "Tests Demo.postman_collection.json" -e "Tests_Demo.postman_environment.json" --env-var "apiKey=${{ secrets.APIKEY }}" --disable-unicode --reporters cli,htmlextra,junit --reporter-htmlextra-export testResults/htmlreport.html || true

   # Upload the contents of Test Results directory to workspace
      - name: Output the run Details
        uses: actions/upload-artifact@v3
        with: 
          name: RunReports
          path: testResults
